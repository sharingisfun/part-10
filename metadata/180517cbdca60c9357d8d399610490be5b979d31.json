{"title":"[Coursera] Automata","uid":9919923,"size":837623015,"categoryP":"other","categoryS":"other","magnet":"?xt=urn:btih:180517cbdca60c9357d8d399610490be5b979d31&amp;dn=%5BCoursera%5D+Automata&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":4,"leechers":2,"uploader":"rndNbr","files":128,"time":1396994222,"description":"AUTOMATA\n******************************************************\nTaught by Jeff Ullman\nPublished by Stanford University and Coursera\nCompiled by the Free Library and Uploaded by rndNbr in March 2014\n\n======================================================\n\nThank you for downloading this educational resource. If you are satisfied with it, I only ask you to seed its torrent or pass it on in some way for someone else's use.\n\nIf you have any comments, questions, or suggestions, if you would like information on other free educational resources, or if you would like to contribute, please contact us at &lt;a class=&quot;__cf_email__&quot; href=&quot;/cdn-cgi/l/email-protection&quot; data-cfemail=&quot;7d1b0f181811141f0f1c0f043d18101c1411531e121053&quot;&gt;[email&amp;#160;protected]&lt;/a&gt;&lt;script cf-hash='f9e31' type=&quot;text/javascript&quot;&gt;\n/* &lt;![CDATA[ */!function(){try{var t=&quot;currentScript&quot;in document?document.currentScript:function(){for(var t=document.getElementsByTagName(&quot;script&quot;),e=t.length;e--;)if(t[e].getAttribute(&quot;cf-hash&quot;))return t[e]}();if(t&amp;&amp;t.previousSibling){var e,r,n,i,c=t.previousSibling,a=c.getAttribute(&quot;data-cfemail&quot;);if(a){for(e=&quot;&quot;,r=parseInt(a.substr(0,2),16),n=2;a.length-n;n+=2)i=parseInt(a.substr(n,2),16)^r,e+=String.fromCharCode(i);e=document.createTextNode(e),c.parentNode.replaceChild(e,c)}}}catch(u){}}();/* ]]&gt; */&lt;/script&gt;\n\nIf you would like to donate, support free education by donating to Khan Academy:\n &lt;a href=&quot;\nhttp://khanacademy.org/donate&quot; rel=&quot;nofollow&quot; target=&quot;_NEW&quot;&gt;\nhttp://khanacademy.org/donate&lt;/a&gt;\n\nThank you.\n\nThe Free Library\n\n======================================================\n\nThis course includes the video lectures (MP4), their subtitles (SRT), transcripts (TXT), and any lecture resources that were provided by the professor(s).\n\n======================================================\n\nThis is version 002 of this course. It ended in February/March 2014.\n\nThis course covers finite automata, context-free grammars, Turing machines, undecidable problems, and intractable problems (NP-completeness).\n\nI am pleased to be able to offer free over the Internet a course on Automata Theory, based on the material I have taught periodically at Stanford in the course CS154. Students have access to screencast lecture videos, are given quiz questions, assignments and exams, receive regular feedback on progress, and can participate in a discussion forum. Those who successfully complete the course will receive a statement of accomplishment. You will need a decent Internet connection for accessing course materials, but should be able to watch the videos on your smartphone.\nThe course covers four broad areas: (1) Finite automata and regular expressions, (2) Context-free grammars, (3) Turing machines and decidability, and (4) the theory of intractability, or NP-complete problems.\n\nWhy Study Automata Theory?\n\nThis subject is not just for those planning to enter the field of complexity theory, although it is a good place to start if that is your goal. Rather, the course will emphasize those aspects of the theory that people really use in practice. Finite automata, regular expressions, and context-free grammars are ideas that have stood the test of time. They are essential tools for compilers. But more importantly, they are used in many systems that require input that is less general than a full programming language yet more complex than &quot;push this button.&quot;\n\nThe concepts of undecidable problems and intractable problems serve a different purpose. Undecidable problems are those for which no computer solution can ever exist, while intractable problems are those for which there is strong evidence that, although they can be solved by a computer, they cannot be solved sufficiently fast that the solution is truly useful in practice. Understanding this theory, and in particular being able to prove that a problem you are facing belongs to one of these classes, allows you to justify taking another approach Ã‚â€” simplifying the problem or writing code to approximate the solution, for example.\n\nDuring the course, I'm going to prove a number of things. The purpose of these proofs is not to torture you or confuse you. Neither are the proofs there because I doubt you would believe me were I merely to state some well-known fact. Rather, understanding how these proofs, especially inductive proofs, work, lets you think more clearly about your own work. I do not advocate proofs that programs are correct, but whenever you attempt something a bit complex, it is good to have in mind the inductive proofs that would be needed to guarantee that what you are doing really works in all cases.\n\nMore information about this course is available at https://coursera.org/course/automata\n","torrent":{"xt":"urn:btih:180517cbdca60c9357d8d399610490be5b979d31","amp;dn":"%5BCoursera%5D+Automata","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"180517cbdca60c9357d8d399610490be5b979d31","infoHashBuffer":{"type":"Buffer","data":[24,5,23,203,220,166,12,147,87,216,211,153,97,4,144,190,91,151,157,49]},"announce":[],"urlList":[]}}